// <auto-generated />
using System;
using ChatingApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatingApp.Migrations
{
    [DbContext(typeof(ChatingContext))]
    [Migration("20240908104332_Change_Id_PropType")]
    partial class Change_Id_PropType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ChatingApp.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .HasColumnName("ID");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("EMAIL");

                    b.Property<DateTime>("LastLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("LAST_LOGIN")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ROLES");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("PK__Account__3214EC27E5110524");

                    b.HasIndex(new[] { "Email" }, "UQ__Account__161CF72436614D57")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ__Account__B15BE12ED599A3F5")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("ChatingApp.Models.FriendRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("Accepted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("ACCEPTED");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_AT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("User1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USER1");

                    b.Property<string>("User2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USER2");

                    b.HasKey("Id")
                        .HasName("PK__FriendRe__3214EC0722F4A167");

                    b.ToTable("FriendRequest", (string)null);
                });

            modelBuilder.Entity("ChatingApp.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CONTENT");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_AT");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime")
                        .HasColumnName("DELETE_AT");

                    b.Property<string>("Filename")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FILENAME")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ROOM_ID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC27029A9597");

                    b.ToTable("MESSAGE", (string)null);
                });

            modelBuilder.Entity("ChatingApp.Models.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<bool?>("Seen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("SEEN");

                    b.Property<string>("Source")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("SYSTEM")
                        .HasColumnName("SOURCE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TITLE");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("PK__NOTIFICA__3214EC2759190BC5");

                    b.ToTable("NOTIFICATION", (string)null);
                });

            modelBuilder.Entity("ChatingApp.Models.Relationship", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("NORMAL")
                        .HasColumnName("TYPE");

                    b.Property<string>("User1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USER1");

                    b.Property<string>("User2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USER2");

                    b.HasKey("Id")
                        .HasName("PK__RELATION__3214EC27E7ECF52A");

                    b.ToTable("RELATIONSHIP", (string)null);
                });

            modelBuilder.Entity("ChatingApp.Models.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TYPE");

                    b.HasKey("Id")
                        .HasName("PK__ROOM__3214EC2743EF8AC8");

                    b.ToTable("ROOM", (string)null);
                });

            modelBuilder.Entity("ChatingApp.Models.RoomAccount", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ROOM_ID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("PK__ROOM_ACC__3214EC278A8A786E");

                    b.HasIndex("RoomId");

                    b.HasIndex("Username");

                    b.ToTable("ROOM_ACCOUNT", (string)null);
                });

            modelBuilder.Entity("ChatingApp.Models.RoomAccount", b =>
                {
                    b.HasOne("ChatingApp.Models.Room", "Room")
                        .WithMany("RoomAccounts")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__ROOM_ACCO__ROOM___0A9D95DB");

                    b.HasOne("ChatingApp.Models.Account", "UsernameNavigation")
                        .WithMany("RoomAccounts")
                        .HasForeignKey("Username")
                        .HasPrincipalKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__ROOM_ACCO__USERN__17036CC0");

                    b.Navigation("Room");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("ChatingApp.Models.Account", b =>
                {
                    b.Navigation("RoomAccounts");
                });

            modelBuilder.Entity("ChatingApp.Models.Room", b =>
                {
                    b.Navigation("RoomAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
